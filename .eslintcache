[{"E:\\code\\elmaonline-web\\src\\App.js":"1","E:\\code\\elmaonline-web\\src\\reportWebVitals.js":"2","E:\\code\\elmaonline-web\\src\\index.js":"3","E:\\code\\elmaonline-web\\src\\app.js":"4","E:\\code\\elmaonline-web\\src\\easypeasy.js":"5","E:\\code\\elmaonline-web\\src\\router.js":"6","E:\\code\\elmaonline-web\\src\\components\\Layout.js":"7","E:\\code\\elmaonline-web\\src\\components\\SearchBar\\SearchBar.js":"8","E:\\code\\elmaonline-web\\src\\components\\Link\\Link.js":"9","E:\\code\\elmaonline-web\\src\\components\\Header\\Header.js":"10","E:\\code\\elmaonline-web\\src\\pages\\map\\store.js":"11","E:\\code\\elmaonline-web\\src\\components\\ReplaysBy\\store.js":"12","E:\\code\\elmaonline-web\\src\\pages\\battle\\index.js":"13","E:\\code\\elmaonline-web\\src\\pages\\not-found\\index.js":"14","E:\\code\\elmaonline-web\\src\\styles\\Paper.js":"15","E:\\code\\elmaonline-web\\src\\utils\\cups.js":"16","E:\\code\\elmaonline-web\\src\\components\\ReplayComments\\ReplayComments.js":"17","E:\\code\\elmaonline-web\\src\\components\\CupResults\\CupResults.js":"18","E:\\code\\elmaonline-web\\src\\components\\Selectors\\Month.js":"19","E:\\code\\elmaonline-web\\src\\pages\\cup\\Interviews.js":"20","E:\\code\\elmaonline-web\\src\\components\\Selectors\\BattleTypes.js":"21","E:\\code\\elmaonline-web\\src\\pages\\teams\\store.js":"22","E:\\code\\elmaonline-web\\src\\components\\ReplayRating\\store.js":"23","E:\\code\\elmaonline-web\\src\\components\\Upload\\store.js":"24","E:\\code\\elmaonline-web\\src\\pages\\kuski\\index.js":"25","E:\\code\\elmaonline-web\\src\\pages\\error\\index.js":"26","E:\\code\\elmaonline-web\\src\\pages\\levelpack\\Admin.js":"27","E:\\code\\elmaonline-web\\src\\styles\\Play.js":"28","E:\\code\\elmaonline-web\\src\\pages\\levelpack\\TotalTimes.js":"29","E:\\code\\elmaonline-web\\src\\constants\\api.js":"30","E:\\code\\elmaonline-web\\src\\components\\Dropzone\\Dropzone.js":"31","E:\\code\\elmaonline-web\\src\\components\\LevelMap\\LevelMap.js":"32","E:\\code\\elmaonline-web\\src\\components\\FieldAutoComplete\\FieldAutoComplete.js":"33","E:\\code\\elmaonline-web\\src\\pages\\levelpack\\store.js":"34","E:\\code\\elmaonline-web\\src\\components\\News\\store.js":"35","E:\\code\\elmaonline-web\\src\\pages\\mod\\index.js":"36","E:\\code\\elmaonline-web\\src\\pages\\help\\index.js":"37","E:\\code\\elmaonline-web\\src\\pages\\home\\cards\\FeedCard.js":"38","E:\\code\\elmaonline-web\\src\\pages\\cup\\StandingsDetailedPopup.js":"39","E:\\code\\elmaonline-web\\src\\components\\RecList\\RecList.js":"40","E:\\code\\elmaonline-web\\src\\styles\\Stars.js":"41","E:\\code\\elmaonline-web\\src\\components\\ReplaysBy\\ReplaysBy.js":"42","E:\\code\\elmaonline-web\\src\\pages\\login\\store.js":"43","E:\\code\\elmaonline-web\\src\\components\\BattleList\\store.js":"44","E:\\code\\elmaonline-web\\src\\components\\TopBar\\TopBar.js":"45","E:\\code\\elmaonline-web\\src\\pages\\levelpack\\index.js":"46","E:\\code\\elmaonline-web\\src\\pages\\register\\index.js":"47","E:\\code\\elmaonline-web\\src\\pages\\mod\\ActionLog.js":"48","E:\\code\\elmaonline-web\\src\\components\\News\\News.js":"49","E:\\code\\elmaonline-web\\src\\components\\Recplayer\\Recplayer.js":"50","E:\\code\\elmaonline-web\\src\\pages\\cup\\Personal.js":"51","E:\\code\\elmaonline-web\\src\\utils\\calcs.js":"52","E:\\code\\elmaonline-web\\src\\components\\Selectors\\Number.js":"53","E:\\code\\elmaonline-web\\src\\components\\ClickToReveal\\ClickToReveal.js":"54","E:\\code\\elmaonline-web\\src\\pages\\level\\store.js":"55","E:\\code\\elmaonline-web\\src\\components\\ChatView\\store.js":"56","E:\\code\\elmaonline-web\\src\\pages\\login\\index.js":"57","E:\\code\\elmaonline-web\\src\\utils\\battle.js":"58","E:\\code\\elmaonline-web\\src\\components\\RankingTable\\RankingTable.js":"59","E:\\code\\elmaonline-web\\src\\components\\AddCup\\AddCup.js":"60","E:\\code\\elmaonline-web\\src\\components\\BattleList\\BattleList.js":"61","E:\\code\\elmaonline-web\\src\\components\\ClickToEdit\\ClickToEdit.js":"62","E:\\code\\elmaonline-web\\src\\pages\\levelpack\\LevelPopup.js":"63","E:\\code\\elmaonline-web\\src\\components\\Flag\\Flag.js":"64","E:\\code\\elmaonline-web\\src\\pages\\chatlog\\index.js":"65","E:\\code\\elmaonline-web\\src\\utils\\historyRefresh.js":"66","E:\\code\\elmaonline-web\\src\\pages\\settings\\store.js":"67","E:\\code\\elmaonline-web\\src\\pages\\battle\\store.js":"68","E:\\code\\elmaonline-web\\src\\components\\SideBar\\SideBar.js":"69","E:\\code\\elmaonline-web\\src\\pages\\replays\\index.js":"70","E:\\code\\elmaonline-web\\src\\pages\\battle\\RecView.js":"71","E:\\code\\elmaonline-web\\src\\components\\ReplayList\\ReplayList.js":"72","E:\\code\\elmaonline-web\\src\\pages\\cup\\Leaders.js":"73","E:\\code\\elmaonline-web\\src\\components\\AchievementsHacktober\\AchievementsHacktober.js":"74","E:\\code\\elmaonline-web\\src\\constants\\ranking.js":"75","E:\\code\\elmaonline-web\\src\\globalStyle.js":"76","E:\\code\\elmaonline-web\\src\\pages\\register\\store.js":"77","E:\\code\\elmaonline-web\\src\\pages\\settings\\index.js":"78","E:\\code\\elmaonline-web\\src\\pages\\team\\index.js":"79","E:\\code\\elmaonline-web\\src\\pages\\cup\\Team.js":"80","E:\\code\\elmaonline-web\\src\\components\\LocalTime\\LocalTime.js":"81","E:\\code\\elmaonline-web\\src\\pages\\home\\cards\\BattlesCard.js":"82","E:\\code\\elmaonline-web\\src\\components\\AddComment\\AddComment.js":"83","E:\\code\\elmaonline-web\\src\\pages\\cup\\Events.js":"84","E:\\code\\elmaonline-web\\src\\components\\CupWidget\\CupWidget.js":"85","E:\\code\\elmaonline-web\\src\\components\\RecListItem\\RecListItem.js":"86","E:\\code\\elmaonline-web\\src\\api.js":"87"},{"size":445,"mtime":1610834847273,"results":"88","hashOfConfig":"89"},{"size":362,"mtime":1610824078138,"results":"90","hashOfConfig":"89"},{"size":478,"mtime":1610834863659,"results":"91","hashOfConfig":"89"},{"size":403,"mtime":1610891522165,"results":"92","hashOfConfig":"89"},{"size":2070,"mtime":1610872503341,"results":"93","hashOfConfig":"89"},{"size":295,"mtime":1610835510550,"results":"94","hashOfConfig":"89"},{"size":961,"mtime":1610886141429,"results":"95","hashOfConfig":"89"},{"size":4278,"mtime":1610898846174,"results":"96","hashOfConfig":"89"},{"size":354,"mtime":1610899696756,"results":"97","hashOfConfig":"89"},{"size":2556,"mtime":1610835426459,"results":"98","hashOfConfig":"89"},{"size":556,"mtime":1610893491222,"results":"99","hashOfConfig":"89"},{"size":1069,"mtime":1610835426599,"results":"100","hashOfConfig":"89"},{"size":8438,"mtime":1610835309257,"results":"101","hashOfConfig":"89"},{"size":1179,"mtime":1610891092419,"results":"102","hashOfConfig":"89"},{"size":501,"mtime":1610835444095,"results":"103","hashOfConfig":"89"},{"size":9350,"mtime":1610885945109,"results":"104","hashOfConfig":"89"},{"size":727,"mtime":1610835426569,"results":"105","hashOfConfig":"89"},{"size":2449,"mtime":1610898942734,"results":"106","hashOfConfig":"89"},{"size":1954,"mtime":1610835426619,"results":"107","hashOfConfig":"89"},{"size":8175,"mtime":1610834971259,"results":"108","hashOfConfig":"89"},{"size":2506,"mtime":1610892787541,"results":"109","hashOfConfig":"89"},{"size":663,"mtime":1610834971569,"results":"110","hashOfConfig":"89"},{"size":760,"mtime":1610893491222,"results":"111","hashOfConfig":"89"},{"size":1203,"mtime":1610835426679,"results":"112","hashOfConfig":"89"},{"size":3596,"mtime":1610887265484,"results":"113","hashOfConfig":"89"},{"size":1026,"mtime":1610887142517,"results":"114","hashOfConfig":"89"},{"size":6875,"mtime":1610834971409,"results":"115","hashOfConfig":"89"},{"size":867,"mtime":1610835444097,"results":"116","hashOfConfig":"89"},{"size":2259,"mtime":1610834971429,"results":"117","hashOfConfig":"89"},{"size":87,"mtime":1610892714503,"results":"118","hashOfConfig":"89"},{"size":1207,"mtime":1610835426349,"results":"119","hashOfConfig":"89"},{"size":1734,"mtime":1610835426479,"results":"120","hashOfConfig":"89"},{"size":2171,"mtime":1610835426369,"results":"121","hashOfConfig":"89"},{"size":6648,"mtime":1610834971439,"results":"122","hashOfConfig":"89"},{"size":368,"mtime":1610835426529,"results":"123","hashOfConfig":"89"},{"size":2997,"mtime":1610891030397,"results":"124","hashOfConfig":"89"},{"size":368,"mtime":1610887217201,"results":"125","hashOfConfig":"89"},{"size":420,"mtime":1610834971339,"results":"126","hashOfConfig":"89"},{"size":3027,"mtime":1610834971279,"results":"127","hashOfConfig":"89"},{"size":3862,"mtime":1610835426549,"results":"128","hashOfConfig":"89"},{"size":1277,"mtime":1610835444099,"results":"129","hashOfConfig":"89"},{"size":1584,"mtime":1610835426589,"results":"130","hashOfConfig":"89"},{"size":1616,"mtime":1610834971472,"results":"131","hashOfConfig":"89"},{"size":639,"mtime":1610835426309,"results":"132","hashOfConfig":"89"},{"size":2913,"mtime":1610835426669,"results":"133","hashOfConfig":"89"},{"size":9362,"mtime":1610890832993,"results":"134","hashOfConfig":"89"},{"size":5948,"mtime":1610891144255,"results":"135","hashOfConfig":"89"},{"size":3071,"mtime":1610834971479,"results":"136","hashOfConfig":"89"},{"size":1747,"mtime":1610835426519,"results":"137","hashOfConfig":"89"},{"size":1469,"mtime":1610835426559,"results":"138","hashOfConfig":"89"},{"size":6034,"mtime":1610834971269,"results":"139","hashOfConfig":"89"},{"size":603,"mtime":1610885945109,"results":"140","hashOfConfig":"89"},{"size":1737,"mtime":1610835426619,"results":"141","hashOfConfig":"89"},{"size":800,"mtime":1610835426329,"results":"142","hashOfConfig":"89"},{"size":2256,"mtime":1610893491222,"results":"143","hashOfConfig":"89"},{"size":1108,"mtime":1610893491205,"results":"144","hashOfConfig":"89"},{"size":2134,"mtime":1610892529901,"results":"145","hashOfConfig":"89"},{"size":3538,"mtime":1610885945107,"results":"146","hashOfConfig":"89"},{"size":2710,"mtime":1610835426539,"results":"147","hashOfConfig":"89"},{"size":2061,"mtime":1610835426269,"results":"148","hashOfConfig":"89"},{"size":4042,"mtime":1610898914174,"results":"149","hashOfConfig":"89"},{"size":1096,"mtime":1610835426319,"results":"150","hashOfConfig":"89"},{"size":5868,"mtime":1610834971419,"results":"151","hashOfConfig":"89"},{"size":318,"mtime":1610893677068,"results":"152","hashOfConfig":"89"},{"size":10490,"mtime":1610893765118,"results":"153","hashOfConfig":"89"},{"size":490,"mtime":1610893976416,"results":"154","hashOfConfig":"89"},{"size":1501,"mtime":1610893491205,"results":"155","hashOfConfig":"89"},{"size":1296,"mtime":1610893491205,"results":"156","hashOfConfig":"89"},{"size":3484,"mtime":1610835426639,"results":"157","hashOfConfig":"89"},{"size":518,"mtime":1610891219816,"results":"158","hashOfConfig":"89"},{"size":2091,"mtime":1610834971222,"results":"159","hashOfConfig":"89"},{"size":1841,"mtime":1610835426569,"results":"160","hashOfConfig":"89"},{"size":748,"mtime":1610834971269,"results":"161","hashOfConfig":"89"},{"size":1084,"mtime":1610835426264,"results":"162","hashOfConfig":"89"},{"size":1298,"mtime":1610892714509,"results":"163","hashOfConfig":"89"},{"size":1278,"mtime":1610834775176,"results":"164","hashOfConfig":"89"},{"size":2457,"mtime":1610893491205,"results":"165","hashOfConfig":"89"},{"size":7664,"mtime":1610891298271,"results":"166","hashOfConfig":"89"},{"size":1185,"mtime":1610892554602,"results":"167","hashOfConfig":"89"},{"size":5492,"mtime":1610834971284,"results":"168","hashOfConfig":"89"},{"size":572,"mtime":1610835426499,"results":"169","hashOfConfig":"89"},{"size":907,"mtime":1610834971339,"results":"170","hashOfConfig":"89"},{"size":1712,"mtime":1610835426269,"results":"171","hashOfConfig":"89"},{"size":5559,"mtime":1610898638154,"results":"172","hashOfConfig":"89"},{"size":1041,"mtime":1610898952605,"results":"173","hashOfConfig":"89"},{"size":2615,"mtime":1610898963714,"results":"174","hashOfConfig":"89"},{"size":9072,"mtime":1610899096065,"results":"175","hashOfConfig":"89"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1912p3r",{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"180"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"186"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"186"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"183"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"190"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"308"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\code\\elmaonline-web\\src\\App.js",[],"E:\\code\\elmaonline-web\\src\\reportWebVitals.js",[],["365","366"],"E:\\code\\elmaonline-web\\src\\index.js",[],["367","368"],"E:\\code\\elmaonline-web\\src\\app.js",[],["369","370"],"E:\\code\\elmaonline-web\\src\\easypeasy.js",["371"],"/* eslint-disable no-param-reassign */\nimport { action } from 'easy-peasy';\nimport ReplayComments from 'components/ReplayComments/store';\nimport ReplayRating from 'components/ReplayRating/store';\nimport ReplaysBy from 'components/ReplaysBy/store';\nimport ChatView from 'components/ChatView/store';\nimport RecList from 'components/RecList/store';\nimport LevelMap from 'components/LevelMap/store';\nimport Register from 'pages/register/store';\nimport Login from 'pages/login/store';\nimport RankingTable from 'components/RankingTable/store';\nimport BattleList from 'components/BattleList/store';\nimport Upload from 'components/Upload/store';\nimport Cups from 'pages/cups/store';\nimport Cup from 'pages/cup/store';\nimport KuskiMap from 'pages/map/store';\nimport LevelPack from 'pages/levelpack/store';\nimport Search from 'pages/search/store';\nimport Kuski from 'pages/kuski/store';\nimport LevelsAdd from 'pages/levels-add/store';\nimport Settings from 'pages/settings/store';\nimport Replay from 'pages/cupreplay/store';\nimport ReplayByUUID from 'pages/replay/store';\nimport Teams from 'pages/teams/store';\nimport Kuskis from 'pages/kuskis/store';\nimport Level from 'pages/level/store';\nimport Mod from 'pages/mod/store';\nimport Battle from 'pages/battle/store';\nimport Levels from 'pages/levels/store';\nimport News from 'components/News/store';\nimport ReplayList from 'components/ReplayList/store';\n\nexport default {\n  ReplayComments,\n  ReplayRating,\n  ReplaysBy,\n  Register,\n  BattleList,\n  ChatView,\n  Cups,\n  Cup,\n  KuskiMap,\n  Kuskis,\n  LevelMap,\n  LevelPack,\n  Search,\n  Kuski,\n  LevelsAdd,\n  Levels,\n  Settings,\n  Upload,\n  Mod,\n  News,\n  Teams,\n  Replay,\n  ReplayByUUID,\n  RecList,\n  RankingTable,\n  Level,\n  Battle,\n  Login,\n  ReplayList,\n  Page: {\n    sideBarVisible: true,\n    showSideBar: action(state => {\n      state.sideBarVisible = true;\n    }),\n    hideSideBar: action(state => {\n      state.sideBarVisible = false;\n    }),\n    toggleSideBar: action(state => {\n      state.sideBarVisible = !state.sideBarVisible;\n    }),\n  },\n  test: {\n    derp: 'hi',\n  },\n};\n",["372","373"],"E:\\code\\elmaonline-web\\src\\router.js",[],"E:\\code\\elmaonline-web\\src\\components\\Layout.js",["374","375"],"E:\\code\\elmaonline-web\\src\\components\\SearchBar\\SearchBar.js",[],"E:\\code\\elmaonline-web\\src\\components\\Link\\Link.js",[],"E:\\code\\elmaonline-web\\src\\components\\Header\\Header.js",[],["376","377"],"E:\\code\\elmaonline-web\\src\\pages\\map\\store.js",["378"],"E:\\code\\elmaonline-web\\src\\components\\ReplaysBy\\store.js",["379"],"/* eslint-disable no-param-reassign */\nimport { action, thunk } from 'easy-peasy';\nimport { ReplayDrivenBy, ReplayUploadedBy } from 'data/api';\n\nexport default {\n  replaysDrivenBy: [],\n  replaysUploadedBy: [],\n  lastDrivenByKuskiId: 0,\n  lastUploadedByKuskiId: 0,\n  setReplaysDrivenBy: action((state, payload) => {\n    state.replaysDrivenBy = payload.replays;\n    state.lastDrivenByKuskiId = payload.KuskiIndex;\n  }),\n  setReplaysUploadedBy: action((state, payload) => {\n    state.replaysUploadedBy = payload.replays;\n    state.lastUploadedByKuskiId = payload.KuskiIndex;\n  }),\n  getDrivenBy: thunk(async (actions, payload) => {\n    const replays = await ReplayDrivenBy(payload);\n    if (replays.ok) {\n      actions.setReplaysDrivenBy({\n        replays: replays.data,\n        KuskiIndex: payload,\n      });\n    }\n  }),\n  getUploadedBy: thunk(async (actions, payload) => {\n    const replays = await ReplayUploadedBy(payload);\n    if (replays.ok) {\n      actions.setReplaysUploadedBy({\n        replays: replays.data,\n        KuskiIndex: payload,\n      });\n    }\n  }),\n};\n","E:\\code\\elmaonline-web\\src\\pages\\battle\\index.js",["380"],"import React, { useState, useEffect } from 'react';\nimport { useStoreState, useStoreActions } from 'easy-peasy';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { Paper } from 'styles/Paper';\nimport { ListContainer, ListHeader, ListCell, ListRow } from 'styles/List';\nimport { BattleType } from 'components/Names';\nimport Time from 'components/Time';\nimport Link from 'components/Link';\nimport ChatView from 'components/ChatView';\nimport Kuski from 'components/Kuski';\nimport LocalTime from 'components/LocalTime';\nimport LeaderHistory from 'components/LeaderHistory';\nimport { sortResults, battleStatus, getBattleType } from 'utils/battle';\nimport RecView from './RecView';\n\nconst getExtra = (KuskiIndex, extra, rankingHistory, battle) => {\n  let typeFilter = '';\n  let value = '';\n  if (Object.keys(rankingHistory).length === 0) return 'unavailable';\n  if (extra === '') {\n    return '';\n  }\n  if (extra === 'RankingAll') {\n    typeFilter = 'All';\n    value = 'Ranking';\n  }\n  if (extra === 'RankingType') {\n    typeFilter = getBattleType(battle);\n    value = 'Ranking';\n  }\n  if (extra === 'RankingIncreaseAll') {\n    typeFilter = 'All';\n    value = 'Increase';\n  }\n  if (extra === 'RankingIncreaseType') {\n    typeFilter = getBattleType(battle);\n    value = 'Increase';\n  }\n  const filtered = rankingHistory.filter(\n    r => r.KuskiIndex === KuskiIndex && r.BattleType === typeFilter,\n  );\n  if (filtered.length > 0) {\n    return parseInt(filtered[0][value], 10).toFixed(2);\n  }\n  return '';\n};\n\nconst Battle = props => {\n  const { BattleIndex } = props;\n  const [extra, setExtra] = useState('');\n  const { allBattleTimes, battle, rankingHistory } = useStoreState(\n    state => state.Battle,\n  );\n  const {\n    getAllBattleTimes,\n    getBattle,\n    getRankingHistoryByBattle,\n  } = useStoreActions(state => state.Battle);\n\n  useEffect(() => {\n    getAllBattleTimes(BattleIndex);\n    getBattle(BattleIndex);\n    getRankingHistoryByBattle(BattleIndex);\n  }, [BattleIndex]);\n\n  const isWindow = typeof window !== 'undefined';\n\n  if (!battle) return <Root>Battle is unfinished</Root>;\n\n  return (\n    <Root>\n      <RecView\n        isWindow={isWindow}\n        BattleIndex={BattleIndex}\n        levelIndex={battle.LevelIndex}\n        battleStatus={battleStatus(battle)}\n      />\n      <RightBarContainer>\n        <div className=\"chatContainer\">\n          <Accordion defaultExpanded>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              <Typography variant=\"body2\">Battle info</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <BattleStyleDescription>\n                {battle.Duration} minute{' '}\n                <span className=\"battleType\">\n                  <BattleType type={battle.BattleType} />\n                </span>{' '}\n                battle in{' '}\n                <a href={`/dl/level/${battle.LevelIndex}`}>\n                  {battle.LevelData ? battle.LevelData.LevelName : '?'}\n                  .lev\n                </a>{' '}\n                {battle.KuskiData.Kuski}\n                <div className=\"timeStamp\">\n                  Started{' '}\n                  <LocalTime\n                    date={battle.Started}\n                    format=\"DD.MM.YYYY HH:mm:ss\"\n                    parse=\"X\"\n                  />\n                </div>\n                <div className=\"timeStamp\">\n                  <a href={`/dl/battlereplay/${BattleIndex}`}>\n                    Download replay\n                  </a>\n                </div>\n                <br />\n                <Link to={`/levels/${battle.LevelIndex}`}>\n                  Go to level page\n                </Link>\n              </BattleStyleDescription>\n            </AccordionDetails>\n          </Accordion>\n          {battle.Finished === 1 && battle.BattleType === 'NM' && (\n            <Accordion defaultExpanded>\n              <AccordionSummary expandIcon={<ExpandMore />}>\n                <Typography variant=\"body1\">Leader history</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                {allBattleTimes !== null && allBattleTimes !== [] ? (\n                  <LeaderHistory allFinished={allBattleTimes} />\n                ) : null}\n              </AccordionDetails>\n            </Accordion>\n          )}\n          {!(battleStatus(battle) === 'Queued') && (\n            <Accordion defaultExpanded>\n              <AccordionSummary expandIcon={<ExpandMore />}>\n                <Typography variant=\"body1\">Chat</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <ChatView\n                  start={Number(battle.Started)}\n                  end={\n                    Number(battle.Started) + Number((battle.Duration + 2) * 60)\n                  }\n                  // battleEndEvent: when the battle ends compared to the start prop\n                  battleEnd={Number(battle.Duration * 60)}\n                  paginated\n                />\n              </AccordionDetails>\n            </Accordion>\n          )}\n        </div>\n      </RightBarContainer>\n      <LevelStatsContainer>\n        <Paper>\n          {battle.Results && (\n            <ListContainer>\n              <ListHeader>\n                <ListCell right width={30}>\n                  #\n                </ListCell>\n                <ListCell width={200}>Kuski</ListCell>\n                <ListCell right width={200}>\n                  Time\n                </ListCell>\n                <ListCell>\n                  <Select\n                    value={extra}\n                    onChange={e => setExtra(e.target.value)}\n                    name=\"extra\"\n                    displayEmpty\n                  >\n                    <MenuItem value=\"\" disabled>\n                      Extra\n                    </MenuItem>\n                    <MenuItem value=\"RankingAll\">Ranking (all)</MenuItem>\n                    <MenuItem value=\"RankingType\">Ranking (type)</MenuItem>\n                    <MenuItem value=\"RankingIncreaseAll\">\n                      Ranking Increase (all)\n                    </MenuItem>\n                    <MenuItem value=\"RankingIncreaseType\">\n                      Ranking Increase (type)\n                    </MenuItem>\n                  </Select>\n                </ListCell>\n              </ListHeader>\n              {[...battle.Results]\n                .sort(sortResults(battle.BattleType))\n                .map((r, i) => {\n                  return (\n                    <>\n                      <ListRow key={r.KuskiIndex}>\n                        <ListCell width={30}>{i + 1}.</ListCell>\n                        <ListCell width={battle.Multi === 1 ? 300 : 200}>\n                          <Kuski kuskiData={r.KuskiData} flag team />\n                          {battle.Multi === 1 && (\n                            <>\n                              {' '}\n                              & <Kuski kuskiData={r.KuskiData2} flag team />\n                            </>\n                          )}\n                        </ListCell>\n                        <ListCell right width={200}>\n                          <Time time={r.Time} apples={r.Apples} />\n                        </ListCell>\n                        <ListCell>\n                          {getExtra(\n                            r.KuskiIndex,\n                            extra,\n                            rankingHistory,\n                            battle,\n                          )}\n                        </ListCell>\n                      </ListRow>\n                    </>\n                  );\n                })}\n            </ListContainer>\n          )}\n        </Paper>\n      </LevelStatsContainer>\n    </Root>\n  );\n};\n\nBattle.propTypes = {\n  BattleIndex: PropTypes.number.isRequired,\n};\n\nconst Root = styled.div`\n  padding: 7px;\n`;\n\nconst RightBarContainer = styled.div`\n  float: right;\n  width: 40%;\n  padding: 7px;\n  box-sizing: border-box;\n  .chatContainer {\n    clear: both;\n  }\n`;\n\nconst LevelStatsContainer = styled.div`\n  width: 60%;\n  float: left;\n  padding: 7px;\n  box-sizing: border-box;\n`;\n\nconst BattleStyleDescription = styled.div`\n  font-size: 14px;\n  .timeStamp {\n    color: #7d7d7d;\n  }\n  .battleType {\n    text-transform: lowercase;\n  }\n`;\n\nexport default Battle;\n",["381","382"],"E:\\code\\elmaonline-web\\src\\pages\\not-found\\index.js",[],"E:\\code\\elmaonline-web\\src\\styles\\Paper.js",[],"E:\\code\\elmaonline-web\\src\\utils\\cups.js",[],"E:\\code\\elmaonline-web\\src\\components\\ReplayComments\\ReplayComments.js",["383"],"E:\\code\\elmaonline-web\\src\\components\\CupResults\\CupResults.js",[],"E:\\code\\elmaonline-web\\src\\components\\Selectors\\Month.js",[],"E:\\code\\elmaonline-web\\src\\pages\\cup\\Interviews.js",[],"E:\\code\\elmaonline-web\\src\\components\\Selectors\\BattleTypes.js",[],"E:\\code\\elmaonline-web\\src\\pages\\teams\\store.js",["384"],"E:\\code\\elmaonline-web\\src\\components\\ReplayRating\\store.js",["385"],"E:\\code\\elmaonline-web\\src\\components\\Upload\\store.js",["386"],"/* eslint-disable no-param-reassign */\nimport { action, thunk } from 'easy-peasy';\nimport { InsertReplay, UpdateReplay, UserInfoByIdentifier } from 'data/api';\n\nexport default {\n  inserted: {},\n  updated: {},\n  error: '',\n  kuskiInfo: {},\n  setInserted: action((state, payload) => {\n    state.inserted = payload;\n  }),\n  setUpdated: action((state, payload) => {\n    state.updated = payload;\n  }),\n  setError: action((state, payload) => {\n    state.error = payload;\n  }),\n  setKuskiInfo: action((state, payload) => {\n    state.kuskiInfo = payload;\n  }),\n  insertReplay: thunk(async (actions, payload) => {\n    const insert = await InsertReplay(payload);\n    if (insert.ok) {\n      actions.setInserted(insert.data);\n    }\n  }),\n  updateReplay: thunk(async (actions, payload) => {\n    const update = await UpdateReplay({ ReplayIndex: payload });\n    if (update.ok) {\n      actions.setUpdated(update.data);\n    }\n  }),\n  getKuskiByName: thunk(async (actions, payload) => {\n    const get = await UserInfoByIdentifier({\n      IdentifierType: 'Kuski',\n      KuskiIdentifier: payload.Kuski,\n    });\n    if (get.ok) {\n      actions.setKuskiInfo({ ...get.data, RecFileName: payload.RecFileName });\n    }\n  }),\n};\n","E:\\code\\elmaonline-web\\src\\pages\\kuski\\index.js",["387"],"E:\\code\\elmaonline-web\\src\\pages\\error\\index.js",["388"],"E:\\code\\elmaonline-web\\src\\pages\\levelpack\\Admin.js",["389"],"/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useEffect } from 'react';\nimport { Grid, TextField } from '@material-ui/core';\nimport styled from 'styled-components';\nimport {\n  Delete as DeleteIcon,\n  PlaylistAdd,\n  DragHandle,\n} from '@material-ui/icons';\nimport { useStoreState, useStoreActions } from 'easy-peasy';\nimport Link from 'components/Link';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { ListCell, ListContainer, ListHeader } from 'styles/List';\n\nconst Admin = ({ records, LevelPack }) => {\n  const [search, setSearch] = useState('');\n  const {\n    levelsFound,\n    adminLoading,\n    settings: { showLegacy },\n  } = useStoreState(state => state.LevelPack);\n  const {\n    deleteLevel,\n    searchLevel,\n    addLevel,\n    sortLevel,\n    sortPack,\n  } = useStoreActions(actions => actions.LevelPack);\n\n  useEffect(() => {\n    const emptySort = records.filter(r => r.Sort === '');\n    if (emptySort.length > 0) {\n      sortPack({\n        LevelPackIndex: LevelPack.LevelPackIndex,\n        levels: records,\n        name: LevelPack.LevelPackName,\n        showLegacy,\n      });\n    }\n  }, []);\n\n  const onDragEnd = result => {\n    if (\n      result.destination &&\n      result.destination.index !== result.source.index\n    ) {\n      sortLevel({\n        LevelPackIndex: LevelPack.LevelPackIndex,\n        levels: records,\n        source: result.source,\n        destination: result.destination,\n        name: LevelPack.LevelPackName,\n        showLegacy,\n      });\n    }\n  };\n\n  const isAlreadyAdded = levelId => {\n    const find = records.filter(l => l.LevelIndex === levelId);\n    return find.length;\n  };\n\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={12} md={6}>\n        <h2>Current levels</h2>\n        <ListContainer>\n          <ListHeader>\n            <ListCell width={70}>Filename</ListCell>\n            <ListCell width={300}>Level name</ListCell>\n            <ListCell width={180}>Remove</ListCell>\n            <ListCell>Sort</ListCell>\n          </ListHeader>\n        </ListContainer>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"levels\">\n            {provided => (\n              <div\n                style={{ position: 'relative' }}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                <ListContainer chin>\n                  {records.map((l, index) => (\n                    <Draggable\n                      key={l.LevelIndex}\n                      draggableId={`${l.LevelIndex}${l.Level.LevelName}`}\n                      index={index}\n                    >\n                      {Dragprovided => (\n                        <Row\n                          key={`${l.LevelIndex}${l.Level.LevelName}`}\n                          ref={Dragprovided.innerRef}\n                          {...Dragprovided.draggableProps}\n                          {...Dragprovided.dragHandleProps}\n                        >\n                          <ListCell width={70}>{l.Level.LevelName}</ListCell>\n                          <ListCell width={300}>{l.Level.LongName}</ListCell>\n                          <ListCell width={180}>\n                            <Delete\n                              onClick={() =>\n                                deleteLevel({\n                                  LevelIndex: l.LevelIndex,\n                                  LevelPackIndex: LevelPack.LevelPackIndex,\n                                  name: LevelPack.LevelPackName,\n                                  showLegacy,\n                                })\n                              }\n                            />\n                          </ListCell>\n                          <ListCell>\n                            <DragHandle />\n                          </ListCell>\n                        </Row>\n                      )}\n                    </Draggable>\n                  ))}\n                </ListContainer>\n                {adminLoading && <Overlay />}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <h2>Search levels</h2>\n        <TextBox>\n          <TextField\n            id=\"outlined-name\"\n            label=\"Filename\"\n            value={search}\n            onChange={e => setSearch(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onKeyUp={e => {\n              if (e.keyCode === 13) {\n                if (e.target.value === '') {\n                  setSearch('');\n                } else if (search.length > 1) {\n                  searchLevel({ q: search });\n                }\n              }\n              if (e.keyCode === 27) {\n                setSearch('');\n              }\n            }}\n          />\n        </TextBox>\n        <ListContainer>\n          <ListHeader>\n            <ListCell width={70}>Filename</ListCell>\n            <ListCell width={300}>Level name</ListCell>\n            <ListCell width={180}>Add</ListCell>\n          </ListHeader>\n          {levelsFound.map(l => (\n            <Row color={isAlreadyAdded(l.LevelIndex)} key={l.LevelIndex}>\n              <ListCell width={70}>\n                <Link to={`/levels/${l.LevelIndex}`}>{l.LevelName}</Link>\n              </ListCell>\n              <ListCell width={300}>{l.LongName}</ListCell>\n              <ListCell width={180}>\n                {!isAlreadyAdded(l.LevelIndex) && (\n                  <Add\n                    onClick={() =>\n                      addLevel({\n                        LevelIndex: l.LevelIndex,\n                        LevelPackIndex: LevelPack.LevelPackIndex,\n                        name: LevelPack.LevelPackName,\n                        levels: records.length,\n                        last: records[records.length - 1],\n                        showLegacy,\n                      })\n                    }\n                  />\n                )}\n              </ListCell>\n            </Row>\n          ))}\n        </ListContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst Overlay = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  background-color: white;\n  z-index: 10;\n  opacity: 0.8;\n  display: flex;\n  justify-content: center;\n  padding-top: 100px;\n`;\n\nconst TextBox = styled.div`\n  margin: 8px;\n`;\n\nconst Delete = styled(DeleteIcon)`\n  cursor: pointer;\n`;\n\nconst Add = styled(PlaylistAdd)`\n  cursor: pointer;\n`;\n\nconst Row = styled.div`\n  display: table-row;\n  background: ${p => (p.selected ? '#219653' : 'transparent')};\n  color: ${p => (p.selected ? '#fff' : 'inherit')};\n  color: ${p => (p.color ? '#b3b3b3' : 'inherit')};\n  :hover {\n    background: ${p => (p.selected ? '#219653' : '#f9f9f9')};\n    color: ${p => (p.selected ? '#fff' : 'inherit')};\n  }\n`;\n\nexport default Admin;\n","E:\\code\\elmaonline-web\\src\\styles\\Play.js",[],"E:\\code\\elmaonline-web\\src\\pages\\levelpack\\TotalTimes.js",["390","391"],"E:\\code\\elmaonline-web\\src\\constants\\api.js",[],"E:\\code\\elmaonline-web\\src\\components\\Dropzone\\Dropzone.js",[],"E:\\code\\elmaonline-web\\src\\components\\LevelMap\\LevelMap.js",["392"],"E:\\code\\elmaonline-web\\src\\components\\FieldAutoComplete\\FieldAutoComplete.js",[],"E:\\code\\elmaonline-web\\src\\pages\\levelpack\\store.js",["393"],"E:\\code\\elmaonline-web\\src\\components\\News\\store.js",["394"],"E:\\code\\elmaonline-web\\src\\pages\\mod\\index.js",["395"],"E:\\code\\elmaonline-web\\src\\pages\\help\\index.js",[],"E:\\code\\elmaonline-web\\src\\pages\\home\\cards\\FeedCard.js",[],"E:\\code\\elmaonline-web\\src\\pages\\cup\\StandingsDetailedPopup.js",[],"E:\\code\\elmaonline-web\\src\\components\\RecList\\RecList.js",["396"],"E:\\code\\elmaonline-web\\src\\styles\\Stars.js",[],"E:\\code\\elmaonline-web\\src\\components\\ReplaysBy\\ReplaysBy.js",["397"],"E:\\code\\elmaonline-web\\src\\pages\\login\\store.js",["398"],"/* eslint-disable no-param-reassign */\nimport { action, thunk } from 'easy-peasy';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nexport default {\n  loggedIn: cookies.get('token') !== undefined,\n  username: cookies.get('username'),\n  setLoggedIn: action((state, payload) => {\n    state.loggedIn = payload;\n  }),\n  setUsername: action((state, payload) => {\n    state.username = payload;\n  }),\n  login: thunk(async (actions, payload) => {\n    const login = await fetch('/token', {\n      method: 'POST',\n      body: JSON.stringify(payload),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const body = await login.json();\n\n    if (!body.Response.success) {\n      return Promise.reject(body.Response.message);\n    }\n\n    const options = {\n      path: '/',\n      maxAge: 8640000,\n    };\n    cookies.set('token', body.Response.token, options);\n    cookies.set('username', body.Response.username, options);\n    cookies.set('userid', body.Response.userid, options);\n    if (body.Response.mod) {\n      cookies.set('mod', body.Response.mod, options);\n    }\n    if (body.Response.admin) {\n      cookies.set('admin', body.Response.admin, options);\n    }\n    actions.setLoggedIn(true);\n    actions.setUsername(body.Response.username);\n    return Promise.resolve();\n  }),\n  logout: thunk(async actions => {\n    cookies.remove('token', { path: '/' });\n    cookies.remove('username', { path: '/' });\n    cookies.remove('userid', { path: '/' });\n    cookies.remove('mod', { path: '/' });\n    cookies.remove('admin', { path: '/' });\n    actions.setLoggedIn(false);\n  }),\n};\n","E:\\code\\elmaonline-web\\src\\components\\BattleList\\store.js",["399"],"E:\\code\\elmaonline-web\\src\\components\\TopBar\\TopBar.js",[],"E:\\code\\elmaonline-web\\src\\pages\\levelpack\\index.js",["400","401"],"import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useStoreState, useStoreActions, useStoreRehydrated } from 'easy-peasy';\nimport {\n  Settings as SettingsIcon,\n  Close as CloseIcon,\n} from '@material-ui/icons';\nimport { Paper } from 'styles/Paper';\nimport {\n  Tabs,\n  Tab,\n  ClickAwayListener,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  FormControl,\n} from '@material-ui/core';\n\nimport { nick, nickId } from 'utils/nick';\nimport FieldBoolean from 'components/FieldBoolean';\nimport Records from './Records';\nimport TotalTimes from './TotalTimes';\nimport Personal from './Personal';\nimport Kinglist from './Kinglist';\nimport MultiRecords from './MultiRecords';\nimport Admin from './Admin';\n\nconst LevelPack = ({ name }) => {\n  const isRehydrated = useStoreRehydrated();\n  const {\n    levelPackInfo,\n    highlight,\n    personalTimes,\n    timesError,\n    records,\n    recordsLoading,\n    setPersonalTimesLoading,\n    personalKuski,\n    settings: { highlightWeeks, showLegacyIcon, showLegacy },\n  } = useStoreState(state => state.LevelPack);\n  const {\n    getLevelPackInfo,\n    getHighlight,\n    getPersonalTimes,\n    setError,\n    getRecords,\n    setHighlightWeeks,\n    toggleShowLegacyIcon,\n    toggleShowLegacy,\n  } = useStoreActions(actions => actions.LevelPack);\n  const lastShowLegacy = useRef(showLegacy);\n  const [openSettings, setOpenSettings] = useState(false);\n  const [tab, setTab] = useState(0);\n\n  useEffect(() => {\n    getLevelPackInfo(name);\n    getRecords({ name, eolOnly: showLegacy ? 0 : 1 });\n    getHighlight();\n    const PersonalKuskiIndex = nick();\n    if (PersonalKuskiIndex !== '') {\n      getPersonalTimes({\n        PersonalKuskiIndex,\n        name,\n        eolOnly: showLegacy ? 0 : 1,\n      });\n    }\n  }, [name]);\n\n  useEffect(() => {\n    if (lastShowLegacy.current !== showLegacy) {\n      lastShowLegacy.current = showLegacy;\n      getRecords({ name, eolOnly: showLegacy ? 0 : 1 });\n      if (personalKuski !== '') {\n        getPersonalTimes({\n          PersonalKuskiIndex: personalKuski,\n          name,\n          eolOnly: showLegacy ? 0 : 1,\n        });\n      }\n    }\n  }, [showLegacy]);\n\n  if (!isRehydrated) return null;\n  if (!levelPackInfo.LevelPackIndex) return null;\n  return (\n    <RootStyle>\n      <Tabs\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        value={tab}\n        onChange={(e, t) => setTab(t)}\n      >\n        <Tab label=\"Records\" />\n        <Tab label=\"Total Times\" />\n        <Tab label=\"King list\" />\n        <Tab label=\"Personal\" />\n        <Tab label=\"Multi records\" />\n        {nickId() === levelPackInfo.KuskiIndex && <Tab label=\"Admin\" />}\n      </Tabs>\n      <LevelPackName>\n        <ShortNameStyled>{levelPackInfo.LevelPackName}</ShortNameStyled>{' '}\n        <LongNameStyled>{levelPackInfo.LevelPackLongName}</LongNameStyled>\n        <a href={`/dl/pack/${levelPackInfo.LevelPackName}`}>\n          <Download>Download</Download>\n        </a>\n      </LevelPackName>\n      <DescriptionStyle>{levelPackInfo.LevelPackDesc}</DescriptionStyle>\n      <Settings>\n        {openSettings ? (\n          <ClickAwayListener onClickAway={() => setOpenSettings(false)}>\n            <Paper>\n              <SettingsHeader>\n                <ClickCloseIcon onClick={() => setOpenSettings(false)} />\n                <SettingsHeadline>Settings</SettingsHeadline>\n              </SettingsHeader>\n              <FormControl component=\"fieldset\" focused={false}>\n                <RadioButtonContainer>\n                  <RadioButtonItem>\n                    <FormLabel component=\"legend\">\n                      Highlight times newer than{' '}\n                    </FormLabel>\n                  </RadioButtonItem>\n                  <RadioButtonItem>\n                    <RadioGroup\n                      aria-label=\"highlightWeeks\"\n                      value={highlightWeeks}\n                      onChange={n => setHighlightWeeks(n.target.value)}\n                      name=\"weeks\"\n                      row\n                    >\n                      <FormControlLabel\n                        value={0}\n                        checked={highlightWeeks === '0'}\n                        label=\"0\"\n                        control={<Radio size=\"small\" />}\n                      />\n                      <FormControlLabel\n                        value={1}\n                        checked={highlightWeeks === '1'}\n                        label=\"1\"\n                        control={<Radio size=\"small\" />}\n                      />\n                      <FormControlLabel\n                        value={2}\n                        checked={highlightWeeks === '2'}\n                        label=\"2\"\n                        control={<Radio size=\"small\" />}\n                      />\n                      <FormControlLabel\n                        value={3}\n                        checked={highlightWeeks === '3'}\n                        label=\"3\"\n                        control={<Radio size=\"small\" />}\n                      />\n                      <FormControlLabel\n                        value={4}\n                        checked={highlightWeeks === '4'}\n                        label=\"4\"\n                        control={<Radio size=\"small\" />}\n                      />\n                    </RadioGroup>\n                  </RadioButtonItem>\n                  <RadioButtonItem>\n                    <FormLabel component=\"legend\">weeks</FormLabel>\n                  </RadioButtonItem>\n                </RadioButtonContainer>\n              </FormControl>\n              {levelPackInfo.Legacy === 1 && (\n                <>\n                  <SettingItem>\n                    <FieldBoolean\n                      value={showLegacyIcon}\n                      label=\"Show icon on legacy times\"\n                      onChange={() => toggleShowLegacyIcon()}\n                    />\n                  </SettingItem>\n                  <SettingItem>\n                    <FieldBoolean\n                      value={showLegacy}\n                      label=\"Show legacy times\"\n                      onChange={() => toggleShowLegacy()}\n                    />\n                  </SettingItem>\n                </>\n              )}\n            </Paper>\n          </ClickAwayListener>\n        ) : (\n          <ClickSettingsIcon onClick={() => setOpenSettings(true)} />\n        )}\n      </Settings>\n      {tab === 0 && (\n        <Records\n          records={records}\n          highlight={highlight}\n          highlightWeeks={highlightWeeks}\n          recordsLoading={recordsLoading}\n          showLegacyIcon={showLegacyIcon}\n        />\n      )}\n      {tab === 1 && (\n        <TotalTimes\n          levelPackIndex={levelPackInfo.LevelPackIndex}\n          highlight={highlight}\n          highlightWeeks={highlightWeeks}\n        />\n      )}\n      {tab === 2 && (\n        <Kinglist\n          levelPackIndex={levelPackInfo.LevelPackIndex}\n          highlight={highlight}\n          highlightWeeks={highlightWeeks}\n        />\n      )}\n      {tab === 3 && (\n        <Personal\n          timesError={timesError}\n          setError={e => setError(e)}\n          getTimes={newKuski =>\n            getPersonalTimes({\n              PersonalKuskiIndex: newKuski,\n              name,\n              eolOnly: showLegacy ? 0 : 1,\n            })\n          }\n          times={personalTimes}\n          highlight={highlight}\n          highlightWeeks={highlightWeeks}\n          records={records}\n          setPersonalTimesLoading={setPersonalTimesLoading}\n          showLegacyIcon={showLegacyIcon}\n          kuski={personalKuski}\n        />\n      )}\n      {tab === 4 && (\n        <MultiRecords\n          name={name}\n          highlight={highlight}\n          highlightWeeks={highlightWeeks}\n        />\n      )}\n      {tab === 5 && <Admin records={records} LevelPack={levelPackInfo} />}\n    </RootStyle>\n  );\n};\n\nLevelPack.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nconst RootStyle = styled.div`\n  background: #fff;\n  min-height: 100%;\n  box-sizing: border-box;\n`;\n\nconst LevelPackName = styled.div`\n  font-size: 20px;\n  padding: 10px;\n`;\n\nconst ShortNameStyled = styled.span`\n  font-weight: 500;\n`;\n\nconst LongNameStyled = styled.span`\n  color: #8c8c8c;\n`;\n\nconst DescriptionStyle = styled.div`\n  margin: 0 10px;\n  font-size: 14px;\n`;\n\nconst Download = styled.span`\n  padding-left: 10px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nconst Settings = styled.div`\n  padding: 0 10px;\n  margin-bottom: 26px;\n  font-size: 14px;\n`;\n\nconst SettingsHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  margin: 5px;\n`;\n\nconst SettingsHeadline = styled.div`\n  color: #8c8c8c;\n  font-size: 20px;\n`;\n\nconst SettingItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n  padding-bottom: 6px;\n`;\n\nconst RadioButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 12px;\n`;\n\nconst RadioButtonItem = styled.div`\n  display: flex;\n  float: left;\n  margin-right: 15px;\n`;\n\nconst ClickSettingsIcon = styled(SettingsIcon)`\n  cursor: pointer;\n`;\n\nconst ClickCloseIcon = styled(CloseIcon)`\n  cursor: pointer;\n`;\n\nconst FormLabel = styled.legend`\n  color: rgba(0, 0, 0, 0.54);\n  font-size: 1rem;\n  letter-spacing: 0.00938em;\n`;\n\nexport default LevelPack;\n","E:\\code\\elmaonline-web\\src\\pages\\register\\index.js",["402"],"E:\\code\\elmaonline-web\\src\\pages\\mod\\ActionLog.js",["403"],"E:\\code\\elmaonline-web\\src\\components\\News\\News.js",["404"],"E:\\code\\elmaonline-web\\src\\components\\Recplayer\\Recplayer.js",[],"E:\\code\\elmaonline-web\\src\\pages\\cup\\Personal.js",["405"],"E:\\code\\elmaonline-web\\src\\utils\\calcs.js",[],"E:\\code\\elmaonline-web\\src\\components\\Selectors\\Number.js",[],"E:\\code\\elmaonline-web\\src\\components\\ClickToReveal\\ClickToReveal.js",[],"E:\\code\\elmaonline-web\\src\\pages\\level\\store.js",["406"],"E:\\code\\elmaonline-web\\src\\components\\ChatView\\store.js",["407"],"E:\\code\\elmaonline-web\\src\\pages\\login\\index.js",["408"],"E:\\code\\elmaonline-web\\src\\utils\\battle.js",[],"E:\\code\\elmaonline-web\\src\\components\\RankingTable\\RankingTable.js",["409"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ListRow, ListCell } from 'styles/List';\nimport { useStoreState, useStoreActions } from 'easy-peasy';\nimport Kuski from 'components/Kuski';\nimport DerpTable from 'components/Table/DerpTable';\n\nconst RankingTable = ({ battleType, minPlayed, period, index, periodType }) => {\n  const { rankingData } = useStoreState(state => state.RankingTable);\n  const { getRankingData } = useStoreActions(actions => actions.RankingTable);\n  useEffect(() => {\n    getRankingData({ period, periodType });\n  }, [period, periodType]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const Points = `Points${battleType}`;\n  const Ranking = `Ranking${battleType}`;\n  const Wins = `Wins${battleType}`;\n  const Designed = `Designed${battleType}`;\n  const Played = `Played${battleType}`;\n  const FilteredRanking =\n    rankingData.length > 0\n      ? rankingData.filter(r => r[Played] > minPlayed)\n      : null;\n  return (\n    <>\n      {FilteredRanking && (\n        <DerpTable\n          headers={[\n            '#',\n            'Player',\n            'Ranking',\n            'Points',\n            'Wins',\n            'Designed',\n            'Played',\n          ]}\n          length={FilteredRanking.length}\n          pagination\n          onChangePage={nextPage => setPage(nextPage)}\n          onChangeRowsPerPage={rows => {\n            setPage(0);\n            setRowsPerPage(rows);\n          }}\n        >\n          {FilteredRanking.sort((a, b) => {\n            return b[Ranking] - a[Ranking];\n          })\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((i, no) => {\n              return (\n                <ListRow key={i[index]}>\n                  <ListCell>{no + 1 + page * rowsPerPage}.</ListCell>\n                  <ListCell>\n                    <Kuski kuskiData={i.KuskiData} team flag />\n                  </ListCell>\n                  <ListCell>{parseFloat(i[Ranking]).toFixed(2)}</ListCell>\n                  <ListCell>{i[Points]}</ListCell>\n                  <ListCell>{i[Wins]}</ListCell>\n                  <ListCell>{i[Designed]}</ListCell>\n                  <ListCell>{i[Played]}</ListCell>\n                </ListRow>\n              );\n            })}\n        </DerpTable>\n      )}\n    </>\n  );\n};\n\nRankingTable.propTypes = {\n  battleType: PropTypes.string.isRequired,\n  minPlayed: PropTypes.number,\n  period: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  index: PropTypes.string.isRequired,\n  periodType: PropTypes.string.isRequired,\n};\n\nRankingTable.defaultProps = {\n  minPlayed: 10,\n};\n\nexport default RankingTable;\n",["410","411"],"E:\\code\\elmaonline-web\\src\\components\\AddCup\\AddCup.js",[],"E:\\code\\elmaonline-web\\src\\components\\BattleList\\BattleList.js",["412"],"E:\\code\\elmaonline-web\\src\\components\\ClickToEdit\\ClickToEdit.js",[],"E:\\code\\elmaonline-web\\src\\pages\\levelpack\\LevelPopup.js",["413"],"E:\\code\\elmaonline-web\\src\\components\\Flag\\Flag.js",[],"E:\\code\\elmaonline-web\\src\\pages\\chatlog\\index.js",["414","415","416","417"],"E:\\code\\elmaonline-web\\src\\utils\\historyRefresh.js",[],"E:\\code\\elmaonline-web\\src\\pages\\settings\\store.js",["418"],"E:\\code\\elmaonline-web\\src\\pages\\battle\\store.js",["419"],"E:\\code\\elmaonline-web\\src\\components\\SideBar\\SideBar.js",["420"],"E:\\code\\elmaonline-web\\src\\pages\\replays\\index.js",[],"E:\\code\\elmaonline-web\\src\\pages\\battle\\RecView.js",[],"E:\\code\\elmaonline-web\\src\\components\\ReplayList\\ReplayList.js",["421"],"E:\\code\\elmaonline-web\\src\\pages\\cup\\Leaders.js",["422"],"E:\\code\\elmaonline-web\\src\\components\\AchievementsHacktober\\AchievementsHacktober.js",[],"E:\\code\\elmaonline-web\\src\\constants\\ranking.js",[],"E:\\code\\elmaonline-web\\src\\globalStyle.js",[],"E:\\code\\elmaonline-web\\src\\pages\\register\\store.js",["423"],"E:\\code\\elmaonline-web\\src\\pages\\settings\\index.js",["424"],"E:\\code\\elmaonline-web\\src\\pages\\team\\index.js",["425"],"E:\\code\\elmaonline-web\\src\\pages\\cup\\Team.js",["426"],"E:\\code\\elmaonline-web\\src\\components\\LocalTime\\LocalTime.js",[],"E:\\code\\elmaonline-web\\src\\pages\\home\\cards\\BattlesCard.js",[],"E:\\code\\elmaonline-web\\src\\components\\AddComment\\AddComment.js",[],"E:\\code\\elmaonline-web\\src\\pages\\cup\\Events.js",[],"E:\\code\\elmaonline-web\\src\\components\\CupWidget\\CupWidget.js",["427"],"E:\\code\\elmaonline-web\\src\\components\\RecListItem\\RecListItem.js",[],"E:\\code\\elmaonline-web\\src\\api.js",[],{"ruleId":"428","replacedBy":"429"},{"ruleId":"430","replacedBy":"431"},{"ruleId":"428","replacedBy":"432"},{"ruleId":"430","replacedBy":"433"},{"ruleId":"428","replacedBy":"434"},{"ruleId":"430","replacedBy":"435"},{"ruleId":"436","severity":1,"message":"437","line":33,"column":1,"nodeType":"438","endLine":78,"endColumn":3},{"ruleId":"428","replacedBy":"439"},{"ruleId":"430","replacedBy":"440"},{"ruleId":"441","severity":1,"message":"442","line":6,"column":8,"nodeType":"443","messageId":"444","endLine":6,"endColumn":14},{"ruleId":"441","severity":1,"message":"445","line":7,"column":8,"nodeType":"443","messageId":"444","endLine":7,"endColumn":15},{"ruleId":"428","replacedBy":"446"},{"ruleId":"430","replacedBy":"447"},{"ruleId":"436","severity":1,"message":"437","line":5,"column":1,"nodeType":"438","endLine":22,"endColumn":3},{"ruleId":"436","severity":1,"message":"437","line":5,"column":1,"nodeType":"438","endLine":36,"endColumn":3},{"ruleId":"448","severity":1,"message":"449","line":74,"column":6,"nodeType":"450","endLine":74,"endColumn":19,"suggestions":"451"},{"ruleId":"428","replacedBy":"452"},{"ruleId":"430","replacedBy":"453"},{"ruleId":"448","severity":1,"message":"454","line":19,"column":6,"nodeType":"450","endLine":19,"endColumn":8,"suggestions":"455"},{"ruleId":"436","severity":1,"message":"437","line":5,"column":1,"nodeType":"438","endLine":26,"endColumn":3},{"ruleId":"436","severity":1,"message":"437","line":5,"column":1,"nodeType":"438","endLine":27,"endColumn":3},{"ruleId":"436","severity":1,"message":"437","line":5,"column":1,"nodeType":"438","endLine":43,"endColumn":3},{"ruleId":"448","severity":1,"message":"456","line":25,"column":6,"nodeType":"450","endLine":25,"endColumn":12,"suggestions":"457"},{"ruleId":"458","severity":2,"message":"459","line":28,"column":9,"nodeType":"443","messageId":"460","endLine":28,"endColumn":16},{"ruleId":"448","severity":1,"message":"461","line":40,"column":6,"nodeType":"450","endLine":40,"endColumn":8,"suggestions":"462"},{"ruleId":"448","severity":1,"message":"463","line":23,"column":6,"nodeType":"450","endLine":23,"endColumn":22,"suggestions":"464"},{"ruleId":"448","severity":1,"message":"465","line":30,"column":6,"nodeType":"450","endLine":30,"endColumn":18,"suggestions":"466"},{"ruleId":"448","severity":1,"message":"467","line":59,"column":6,"nodeType":"450","endLine":59,"endColumn":18,"suggestions":"468"},{"ruleId":"436","severity":1,"message":"437","line":20,"column":1,"nodeType":"438","endLine":236,"endColumn":3},{"ruleId":"436","severity":1,"message":"437","line":5,"column":1,"nodeType":"438","endLine":16,"endColumn":3},{"ruleId":"448","severity":1,"message":"469","line":25,"column":6,"nodeType":"450","endLine":25,"endColumn":8,"suggestions":"470"},{"ruleId":"448","severity":1,"message":"471","line":30,"column":6,"nodeType":"450","endLine":30,"endColumn":18,"suggestions":"472"},{"ruleId":"448","severity":1,"message":"473","line":29,"column":6,"nodeType":"450","endLine":29,"endColumn":24,"suggestions":"474"},{"ruleId":"436","severity":1,"message":"437","line":7,"column":1,"nodeType":"438","endLine":55,"endColumn":3},{"ruleId":"436","severity":1,"message":"437","line":5,"column":1,"nodeType":"438","endLine":24,"endColumn":3},{"ruleId":"448","severity":1,"message":"475","line":68,"column":6,"nodeType":"450","endLine":68,"endColumn":12,"suggestions":"476"},{"ruleId":"448","severity":1,"message":"477","line":82,"column":6,"nodeType":"450","endLine":82,"endColumn":18,"suggestions":"478"},{"ruleId":"448","severity":1,"message":"479","line":39,"column":6,"nodeType":"450","endLine":39,"endColumn":8,"suggestions":"480"},{"ruleId":"448","severity":1,"message":"481","line":19,"column":6,"nodeType":"450","endLine":19,"endColumn":8,"suggestions":"482"},{"ruleId":"448","severity":1,"message":"483","line":15,"column":6,"nodeType":"450","endLine":15,"endColumn":8,"suggestions":"484"},{"ruleId":"448","severity":1,"message":"485","line":48,"column":6,"nodeType":"450","endLine":48,"endColumn":8,"suggestions":"486"},{"ruleId":"436","severity":1,"message":"437","line":11,"column":1,"nodeType":"438","endLine":84,"endColumn":3},{"ruleId":"436","severity":1,"message":"437","line":5,"column":1,"nodeType":"438","endLine":38,"endColumn":3},{"ruleId":"448","severity":1,"message":"487","line":34,"column":5,"nodeType":"450","endLine":34,"endColumn":12,"suggestions":"488"},{"ruleId":"448","severity":1,"message":"489","line":13,"column":6,"nodeType":"450","endLine":13,"endColumn":26,"suggestions":"490"},{"ruleId":"428","replacedBy":"491"},{"ruleId":"430","replacedBy":"492"},{"ruleId":"448","severity":1,"message":"493","line":23,"column":6,"nodeType":"450","endLine":23,"endColumn":18,"suggestions":"494"},{"ruleId":"448","severity":1,"message":"495","line":53,"column":6,"nodeType":"450","endLine":53,"endColumn":27,"suggestions":"496"},{"ruleId":"441","severity":1,"message":"497","line":5,"column":8,"nodeType":"443","messageId":"444","endLine":5,"endColumn":19},{"ruleId":"448","severity":1,"message":"498","line":168,"column":6,"nodeType":"450","endLine":168,"endColumn":8,"suggestions":"499"},{"ruleId":"448","severity":1,"message":"500","line":175,"column":5,"nodeType":"450","endLine":175,"endColumn":17,"suggestions":"501"},{"ruleId":"441","severity":1,"message":"502","line":179,"column":11,"nodeType":"443","messageId":"444","endLine":179,"endColumn":20},{"ruleId":"436","severity":1,"message":"437","line":5,"column":1,"nodeType":"438","endLine":57,"endColumn":3},{"ruleId":"436","severity":1,"message":"437","line":9,"column":1,"nodeType":"438","endLine":49,"endColumn":3},{"ruleId":"448","severity":1,"message":"503","line":23,"column":6,"nodeType":"450","endLine":23,"endColumn":8,"suggestions":"504"},{"ruleId":"448","severity":1,"message":"471","line":19,"column":6,"nodeType":"450","endLine":19,"endColumn":22,"suggestions":"505"},{"ruleId":"448","severity":1,"message":"506","line":16,"column":6,"nodeType":"450","endLine":16,"endColumn":24,"suggestions":"507"},{"ruleId":"436","severity":1,"message":"437","line":11,"column":1,"nodeType":"438","endLine":91,"endColumn":3},{"ruleId":"448","severity":1,"message":"508","line":47,"column":6,"nodeType":"450","endLine":47,"endColumn":8,"suggestions":"509"},{"ruleId":"448","severity":1,"message":"510","line":16,"column":6,"nodeType":"450","endLine":16,"endColumn":8,"suggestions":"511"},{"ruleId":"448","severity":1,"message":"512","line":35,"column":6,"nodeType":"450","endLine":35,"endColumn":8,"suggestions":"513"},{"ruleId":"448","severity":1,"message":"514","line":16,"column":6,"nodeType":"450","endLine":16,"endColumn":8,"suggestions":"515"},"no-native-reassign",["516"],"no-negated-in-lhs",["517"],["516"],["517"],["516"],["517"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["516"],["517"],"no-unused-vars","'TopBar' is defined but never used.","Identifier","unusedVar","'SideBar' is defined but never used.",["516"],["517"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllBattleTimes', 'getBattle', and 'getRankingHistoryByBattle'. Either include them or remove the dependency array.","ArrayExpression",["518"],["516"],["517"],"React Hook useEffect has missing dependencies: 'ReplayIndex', 'getComments', and 'lastReplayIndex'. Either include them or remove the dependency array.",["519"],"React Hook useEffect has a missing dependency: 'getKuskiByName'. Either include it or remove the dependency array.",["520"],"no-undef","'__DEV__' is not defined.","undef","React Hook useEffect has missing dependencies: 'LevelPack.LevelPackIndex', 'LevelPack.LevelPackName', 'records', 'showLegacy', and 'sortPack'. Either include them or remove the dependency array.",["521"],"React Hook useEffect has missing dependencies: 'getTotalTimes', 'lastPack', and 'showLegacy'. Either include them or remove the dependency array.",["522"],"React Hook useEffect has missing dependencies: 'getTotalTimes' and 'levelPackIndex'. Either include them or remove the dependency array.",["523"],"React Hook useEffect has a missing dependency: 'getLevelData'. Either include it or remove the dependency array.",["524"],"React Hook useEffect has a missing dependency: 'getNickChanges'. Either include it or remove the dependency array.",["525"],"React Hook useEffect has a missing dependency: 'getReplays'. Either include it or remove the dependency array.",["526"],"React Hook useEffect has missing dependencies: 'getDrivenBy', 'getUploadedBy', 'lastDrivenByKuskiId', and 'lastUploadedByKuskiId'. Either include them or remove the dependency array.",["527"],"React Hook useEffect has missing dependencies: 'getHighlight', 'getLevelPackInfo', 'getPersonalTimes', 'getRecords', and 'showLegacy'. Either include them or remove the dependency array.",["528"],"React Hook useEffect has missing dependencies: 'getPersonalTimes', 'getRecords', 'name', and 'personalKuski'. Either include them or remove the dependency array.",["529"],"React Hook useEffect has missing dependencies: 'countries.length' and 'getCountries'. Either include them or remove the dependency array.",["530"],"React Hook useEffect has a missing dependency: 'getActionLog'. Either include it or remove the dependency array.",["531"],"React Hook useEffect has missing dependencies: 'amount' and 'getNews'. Either include them or remove the dependency array.",["532"],"React Hook useEffect has missing dependencies: 'cup.CupGroupIndex', 'events', 'getMyReplays', and 'getMyTimes'. Either include them or remove the dependency array.",["533"],"React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["534"],"React Hook useEffect has a missing dependency: 'getRankingData'. Either include it or remove the dependency array.",["535"],["516"],["517"],"React Hook useEffect has missing dependencies: 'getBattles' and 'limit'. Either include them or remove the dependency array.",["536"],"React Hook useEffect has missing dependencies: 'KuskiIndex', 'getLevelBesttimes', 'getLevelMultiBesttimes', 'getPersonalAllFinished', 'multi', and 'showLegacy'. Either include them or remove the dependency array.",["537"],"'queryString' is defined but never used.","React Hook useEffect has missing dependencies: 'chatPage', 'getPlayers', 'query.page', and 'setChatPage'. Either include them or remove the dependency array.",["538"],"React Hook useMemo has a missing dependency: 'queryIds'. Either include it or remove the dependency array.",["539"],"'sortOrder' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hideSideBar'. Either include it or remove the dependency array.",["540"],["541"],"React Hook useEffect has missing dependencies: 'event.EndTime', 'event.StartTime', and 'getAllFinishedInRange'. Either include them or remove the dependency array.",["542"],"React Hook useEffect has missing dependencies: 'getIgnored' and 'getUserInfo'. Either include them or remove the dependency array.",["543"],"React Hook useEffect has missing dependencies: 'TeamName' and 'getTeamMembers'. Either include them or remove the dependency array.",["544"],"React Hook useEffect has missing dependencies: 'cup.CupGroupIndex' and 'getTeamReplays'. Either include them or remove the dependency array.",["545"],"React Hook useEffect has missing dependencies: 'ShortName', 'getCup', and 'lastCupShortName'. Either include them or remove the dependency array.",["546"],"no-global-assign","no-unsafe-negation",{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},{"desc":"565","fix":"566"},{"desc":"567","fix":"568"},{"desc":"569","fix":"570"},{"desc":"571","fix":"572"},{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},"Update the dependencies array to be: [BattleIndex, getAllBattleTimes, getBattle, getRankingHistoryByBattle]",{"range":"605","text":"606"},"Update the dependencies array to be: [ReplayIndex, getComments, lastReplayIndex]",{"range":"607","text":"608"},"Update the dependencies array to be: [getKuskiByName, name]",{"range":"609","text":"610"},"Update the dependencies array to be: [LevelPack.LevelPackIndex, LevelPack.LevelPackName, records, showLegacy, sortPack]",{"range":"611","text":"612"},"Update the dependencies array to be: [getTotalTimes, lastPack, levelPackIndex, showLegacy]",{"range":"613","text":"614"},"Update the dependencies array to be: [getTotalTimes, levelPackIndex, showLegacy]",{"range":"615","text":"616"},"Update the dependencies array to be: [LevelIndex, getLevelData]",{"range":"617","text":"618"},"Update the dependencies array to be: [getNickChanges]",{"range":"619","text":"620"},"Update the dependencies array to be: [LevelIndex, getReplays]",{"range":"621","text":"622"},"Update the dependencies array to be: [type, KuskiIndex, lastDrivenByKuskiId, getDrivenBy, lastUploadedByKuskiId, getUploadedBy]",{"range":"623","text":"624"},"Update the dependencies array to be: [getHighlight, getLevelPackInfo, getPersonalTimes, getRecords, name, showLegacy]",{"range":"625","text":"626"},"Update the dependencies array to be: [getPersonalTimes, getRecords, name, personalKuski, showLegacy]",{"range":"627","text":"628"},"Update the dependencies array to be: [countries.length, getCountries]",{"range":"629","text":"630"},"Update the dependencies array to be: [getActionLog]",{"range":"631","text":"632"},"Update the dependencies array to be: [amount, getNews]",{"range":"633","text":"634"},"Update the dependencies array to be: [cup.CupGroupIndex, events, getMyReplays, getMyTimes]",{"range":"635","text":"636"},"Update the dependencies array to be: [login, navigate]",{"range":"637","text":"638"},"Update the dependencies array to be: [getRankingData, period, periodType]",{"range":"639","text":"640"},"Update the dependencies array to be: [start, end, getBattles, limit]",{"range":"641","text":"642"},"Update the dependencies array to be: [KuskiIndex, getLevelBesttimes, getLevelMultiBesttimes, getPersonalAllFinished, levelId, multi, showLegacy, timesLimit]",{"range":"643","text":"644"},"Update the dependencies array to be: [chatPage, getPlayers, query.page, setChatPage]",{"range":"645","text":"646"},"Update the dependencies array to be: [playerList, queryIds]",{"range":"647","text":"648"},"Update the dependencies array to be: [hideSideBar]",{"range":"649","text":"650"},"Update the dependencies array to be: [getReplays, page, pageSize]",{"range":"651","text":"652"},"Update the dependencies array to be: [event.EndTime, event.LevelIndex, event.StartTime, getAllFinishedInRange]",{"range":"653","text":"654"},"Update the dependencies array to be: [getIgnored, getUserInfo]",{"range":"655","text":"656"},"Update the dependencies array to be: [TeamName, getTeamMembers]",{"range":"657","text":"658"},"Update the dependencies array to be: [cup.CupGroupIndex, getTeamReplays]",{"range":"659","text":"660"},"Update the dependencies array to be: [ShortName, getCup, lastCupShortName]",{"range":"661","text":"662"},[2170,2183],"[BattleIndex, getAllBattleTimes, getBattle, getRankingHistoryByBattle]",[547,549],"[ReplayIndex, getComments, lastReplayIndex]",[790,796],"[getKuskiByName, name]",[1161,1163],"[LevelPack.LevelPackIndex, LevelPack.LevelPackName, records, showLegacy, sortPack]",[780,796],"[getTotalTimes, lastPack, levelPackIndex, showLegacy]",[993,1005],"[getTotalTimes, levelPackIndex, showLegacy]",[1309,1321],"[LevelIndex, getLevelData]",[877,879],"[getNickChanges]",[963,975],"[LevelIndex, getReplays]",[862,880],"[type, KuskiIndex, lastDrivenByKuskiId, getDrivenBy, lastUploadedByKuskiId, getUploadedBy]",[1825,1831],"[getHighlight, getLevelPackInfo, getPersonalTimes, getRecords, name, showLegacy]",[2196,2208],"[getPersonalTimes, getRecords, name, personalKuski, showLegacy]",[1103,1105],"[countries.length, getCountries]",[753,755],"[getActionLog]",[610,612],"[amount, getNews]",[1429,1431],"[cup.CupGroupIndex, events, getMyReplays, getMyTimes]",[993,1000],"[login, navigate]",[588,608],"[getRankingData, period, periodType]",[918,930],"[start, end, getBattles, limit]",[1353,1374],"[KuskiIndex, getLevelBesttimes, getLevelMultiBesttimes, getPersonalAllFinished, levelId, multi, showLegacy, timesLimit]",[4620,4622],"[chatPage, getPlayers, query.page, setChatPage]",[4756,4768],"[playerList, queryIds]",[650,652],"[hideSideBar]",[702,718],"[getReplays, page, pageSize]",[521,539],"[event.EndTime, event.LevelIndex, event.StartTime, getAllFinishedInRange]",[1602,1604],"[getIgnored, getUserInfo]",[589,591],"[TeamName, getTeamMembers]",[1224,1226],"[cup.CupGroupIndex, getTeamReplays]",[548,550],"[ShortName, getCup, lastCupShortName]"]